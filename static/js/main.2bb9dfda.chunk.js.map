{"version":3,"sources":["static/covid.jpg","serviceWorker.js","components/Header/index.js","components/MenuAppBar/index.js","components/ReadMeCard/index.js","components/Chart/data.js","components/Chart/NoDataCard.js","config/url.js","components/Chart/index.js","components/CountryDropDown/index.js","components/GlobalStats/index.js","components/Countries/Countries.js","components/DisplayStats/DisplayStats.js","routes/home/index.js","routes/compare/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","activeClassName","href","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","maxWidth","media","height","MediaCard","classes","Card","CardActionArea","CardMedia","image","img","CardContent","Typography","gutterBottom","variant","component","color","startingData","labels","datasets","label","fillColor","borderColor","strokeColor","pointColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderWidth","pointStrokeColor","pointHighlightFill","pointHighlightStroke","data","options","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","legendTemplate","styles","graphContainer","border","padding","minWidth","bullet","display","margin","transform","fontSize","pos","marginBottom","NoDataCard","CardActions","Button","size","baseURL","LineChartExample","props","updateContryDataSets","a","country","url","fetch","response","console","log","json","newData","generateDataSets","setState","state","this","prevProps","prevState","activeCasesData","map","record","Active","confirmedCasesData","Confirmed","deathsData","Deaths","recoveredCasesData","Recovered","newLabels","Date","split","newDataSets","dataset","index","newDataSet","containsChartData","length","style","type","width","Component","CountryDropDown","setCountry","value","changeCountry","Slug","Autocomplete","id","getOptionLabel","option","Country","onChange","event","renderInput","params","TextField","GlobalStats","globalStats","stats","Object","keys","key","Countries","countryStats","DisplayStats","array","toUpperCase","replace","i","search","selectedCountry","countries","Home","countrySelected","goToHomePage","Global","Chart","Compare","selectedCountry1","selectedCountry2","countrySelected1","countrySelected2","changeCountry1","changeCountry2","App","handleRoute","e","currentUrl","path","React","render","StrictMode","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2bb9dfda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid.3d817523.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { Link } from \"preact-router/match\";\nimport \"./style.css\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1>Covid Dashboard</h1>\n    <nav>\n      <Link activeClassName=\"active\" href=\"/\">\n        Home\n      </Link>\n      <Link activeClassName=\"active\" href=\"/compare\">\n        Compare Countries\n      </Link>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { h, Component } from \"preact\";\nimport { useState } from \"preact/compat\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport \"./index.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuAppBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const { goToHomePage: homePage } = props;\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const goToHomePage = () => {\n    homePage();\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={goToHomePage}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Covid Dashboard\n          </Typography>\n\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose}>Profile</MenuItem>\n              <MenuItem onClick={handleClose}>My account</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport img from \"../../static/covid.jpg\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Covid Dashboard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            What the world really needs right now. Another amateur Covid\n            dashboard to add to the noise of Covid stats.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","const startingData = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"Active\",\n      fillColor: \"rgba(60,179,113,0.2)\",\n      borderColor: \"rgba(60,179,113,0.2)\",\n      strokeColor: \"rgba(60,179,113,0.2)\",\n      pointColor: \"rgba(60,179,113,1)\",\n      pointBackgroundColor: \"rgba(60,179,113,1)\",\n      pointHoverBackgroundColor: \"rgba(60,179,113,1)\",\n      pointHoverBorderWidth: \"30\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(220,220,220,1)\",\n      data: [65, 59, 80, 81, 56, 55, 40, 20, 20],\n    },\n    {\n      label: \"Confirmed\",\n      fillColor: \"rgba(204,204,0,0.2)\",\n      borderColor: \"rgba(204,204,0,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(204,204,0,1)\",\n      pointBackgroundColor: \"rgba(204,204,0,1)\",\n      pointHoverBorderWidth: \"30\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,1)\",\n      data: [28, 48, 40, 19, 86, 27, 90],\n    },\n    {\n      label: \"Deaths\",\n      fillColor: \"rgba(220,20,60,0.2)\",\n      borderColor: \"rgba(220,20,60,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(220,20,60,0.5)\",\n      pointBackgroundColor: \"rgba(220,20,60,0.5)\",\n      pointHoverBorderWidth: \"30\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,1)\",\n      data: [28, 48, 40, 19, 86, 27, 90],\n    },\n    {\n      label: \"Recovered\",\n      fillColor: \"rgba(0,191,255,0.2)\",\n      borderColor: \"rgba(0,191,255,0.2)\",\n      strokeColor: \"rgba(151,187,205,1)\",\n      pointColor: \"rgba(0,191,255,1)\",\n      pointBackgroundColor: \"rgba(0,191,255,1)\",\n      pointHoverBorderWidth: \"30\",\n      pointStrokeColor: \"#fff\",\n      pointHighlightFill: \"#fff\",\n      pointHighlightStroke: \"rgba(151,187,205,1)\",\n      data: [28, 48, 40, 19, 86, 27, 90],\n    },\n  ],\n};\n\nconst options = {\n  scaleShowGridLines: true,\n  scaleGridLineColor: \"rgba(0,0,0,.05)\",\n  scaleGridLineWidth: 1,\n  scaleShowHorizontalLines: true,\n  scaleShowVerticalLines: true,\n  bezierCurve: true,\n  bezierCurveTension: 0.4,\n  pointDot: true,\n  pointDotRadius: 4,\n  pointDotStrokeWidth: 1,\n  pointHitDetectionRadius: 20,\n  datasetStroke: true,\n  datasetStrokeWidth: 2,\n  datasetFill: true,\n  legendTemplate:\n    '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',\n};\n\nconst styles = {\n  graphContainer: {\n    border: \"1px solid black\",\n    padding: \"15px\",\n  },\n};\n\nexport { startingData, options, styles };\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function NoDataCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          No Information on the rona.\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Please select another country.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","const baseURL = \"https://api.covid19api.com\";\n\nexport { baseURL };\n","import React from \"react\";\nimport { h, Component } from \"preact\";\nimport { Line as LineChart } from \"react-chartjs-2\";\nimport { options, styles, startingData } from \"./data\";\nimport NoDataCard from \"./NoDataCard\";\nimport { baseURL } from \"../../config/url\";\n\nclass LineChartExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: startingData,\n      country: this.props.country,\n    };\n  }\n\n  async componentDidMount() {\n    this.updateContryDataSets();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.country === this.state.country &&\n      prevProps.country === this.props.country\n    ) {\n      return;\n    }\n    this.updateContryDataSets();\n  }\n\n  updateContryDataSets = async () => {\n    const { country } = this.props;\n    const url = `${baseURL}/total/dayone/country/${country}`;\n    const response = await fetch(url);\n    console.log(\"LineChartExample -> updateContryDataSets -> url\", url);\n    const data = await response.json();\n    console.log(\"LineChartExample -> updateContryDataSets -> data\", data);\n    const newData = this.generateDataSets(data);\n    this.setState({ data: newData });\n  };\n\n  generateDataSets(data) {\n    const {\n      data: { datasets },\n    } = this.state;\n\n    const activeCasesData = data.map((record) => {\n      return record.Active;\n    });\n    const confirmedCasesData = data.map((record) => {\n      return record.Confirmed;\n    });\n\n    const deathsData = data.map((record) => {\n      return record.Deaths;\n    });\n    const recoveredCasesData = data.map((record) => {\n      return record.Recovered;\n    });\n\n    const newLabels = data.map((record) => {\n      const strippedDate = record.Date.split(\"T\")[0];\n      return strippedDate;\n    });\n\n    const newDataSets = datasets.map((dataset, index) => {\n      const newDataSet = { ...dataset };\n      switch (index) {\n        case 0:\n          newDataSet.data = activeCasesData;\n          break;\n        case 1:\n          newDataSet.data = confirmedCasesData;\n          break;\n        case 2:\n          newDataSet.data = deathsData;\n          break;\n        case 3:\n          newDataSet.data = recoveredCasesData;\n          break;\n        default:\n          break;\n      }\n      return newDataSet;\n    });\n\n    const newData = {};\n    newData.labels = newLabels;\n    newData.datasets = newDataSets;\n    return newData;\n  }\n\n  render({}, { data }) {\n    const containsChartData = data.labels.length >= 1;\n    return (\n      <div style={styles.graphContainer}>\n        {containsChartData ? (\n          <LineChart\n            type=\"line\"\n            data={data}\n            options={options}\n            width=\"600\"\n            height=\"250\"\n            country=\"canada\"\n          />\n        ) : (\n          <NoDataCard />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default LineChartExample;\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport { h, Component } from \"preact\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { baseURL } from \"../../config/url\";\n\nclass CountryDropDown extends Component {\n  state = {\n    options: [],\n  };\n  async componentDidMount() {\n    const url = `${baseURL}/countries`;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ options: data });\n  }\n\n  setCountry = (value) => {\n    if (value) {\n      const { changeCountry } = this.props;\n      const { Slug } = value;\n      changeCountry(Slug);\n    }\n  };\n\n  render({}, { options }) {\n    return (\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={options}\n        getOptionLabel={(option) => option.Country}\n        style={{ width: 300 }}\n        onChange={(event, value) => {\n          this.setCountry(value);\n        }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Country\" variant=\"outlined\" />\n        )}\n      />\n    );\n  }\n}\n\nexport default CountryDropDown;\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst GlobalStats = (props) => {\n  var globalStats = props.stats;\n  return (\n    <CardActionArea>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        Global Statistics\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        <div>\n          <ul>\n            {/* ref: https://stackoverflow.com/questions/44139048/render-object-in-reactjs */}\n            {Object.keys(globalStats).map((stats, index) => (\n              <li key={index}>\n                {stats} : {globalStats[stats]}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </Typography>\n    </CardActionArea>\n  );\n};\n\nexport default GlobalStats;\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Countries = (props) => {\n  var countryStats = props.countryStats;\n  return (\n    <CardActionArea>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        Country Statistics\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        <div>\n          <ul>\n            {/* ref: https://stackoverflow.com/questions/44139048/render-object-in-reactjs */}\n            {Object.keys(countryStats).map((stats, index) => (\n              <li key={index}>\n                {stats} : {countryStats[stats]}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </Typography>\n    </CardActionArea>\n  );\n};\n\nexport default Countries;\n","import React from \"react\";\nimport { h } from \"preact\";\nimport { Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalStats from \"../GlobalStats\";\nimport Countries from \"../Countries/Countries\";\nimport \"./style.css\";\n\nconst search = (value, array) => {\n  value = value.toUpperCase().replace(/\\s+/g, \"\");\n  for (var i = 0; i < array.length; i++) {\n    var country = array[i].Slug.toUpperCase().replace(/\\s+/g, \"\");\n    if (country == value) {\n      return array[i];\n    }\n  }\n};\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst DisplayStats = (props) => {\n  var countryStats = search(props.selectedCountry, props.countries);\n  var globalStats = props.globalStats;\n\n  const classes = useStyles();\n\n  if (countryStats == null) {\n    return <div></div>;\n  } else {\n    return (\n      <div className=\"card\">\n        <Card className={classes.root}>\n          <GlobalStats stats={globalStats} />\n          <Countries countryStats={countryStats} />\n        </Card>\n      </div>\n    );\n  }\n};\n\nexport default DisplayStats;\n","import React from \"react\";\nimport { h, Component } from \"preact\";\nimport \"../../index.css\";\nimport AppBar from \"../../components/MenuAppBar\";\nimport ReadMeCard from \"../../components/ReadMeCard\";\nimport Chart from \"../../components/Chart\";\nimport CountryDropDown from \"../../components/CountryDropDown\";\nimport DisplayStats from \"../../components/DisplayStats/DisplayStats\";\nimport { baseURL } from \"../../config/url\";\n\nexport default class Home extends Component {\n  state = {\n    globalStats: {},\n    countries: [],\n    selectedCountry: \"\",\n    countrySelected: false,\n  };\n\n  changeCountry = (country) => {\n    console.log(\"App -> changeCountry -> country\", country);\n    this.setState({ countrySelected: false });\n    this.setState({ selectedCountry: country });\n    this.setState({ countrySelected: true });\n  };\n\n  goToHomePage = () => {\n    this.setState({ countrySelected: false });\n  };\n\n  async componentDidMount() {\n    const url = `${baseURL}summary`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(\"Home -> componentDidMount -> data\", data);\n    this.setState({ globalStats: data.Global, countries: data.Countries });\n  }\n\n  render({}, { countrySelected, globalStats, selectedCountry, countries }) {\n    return (\n      <div className=\"outerContainer\">\n        {/* <AppBar goToHomePage={this.goToHomePage} /> */}\n        <div className=\"read-me\">\n          <CountryDropDown changeCountry={this.changeCountry} />\n          {countrySelected ? null : <ReadMeCard />}\n        </div>\n        {countrySelected ? <Chart country={selectedCountry} /> : null}\n        <div className=\"statisticsContainer\">\n          {countrySelected ? (\n            <DisplayStats\n              selectedCountry={selectedCountry}\n              globalStats={globalStats}\n              countries={countries}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { h, Component } from \"preact\";\nimport \"./index.css\";\nimport AppBar from \"../../components/MenuAppBar\";\nimport Chart from \"../../components/Chart\";\nimport CountryDropDown from \"../../components/CountryDropDown\";\nimport DisplayStats from \"../../components/DisplayStats/DisplayStats\";\n\nexport default class Compare extends Component {\n  state = {\n    globalStats: {},\n    countries: [],\n    selectedCountry1: \"\",\n    selectedCountry2: \"\",\n    countrySelected1: false,\n    countrySelected2: false,\n  };\n\n  changeCountry1 = (country) => {\n    this.setState({ selectedCountry1: country });\n    this.setState({ countrySelected1: true });\n  };\n\n  changeCountry2 = (country) => {\n    this.setState({ selectedCountry2: country });\n    this.setState({ countrySelected2: true });\n  };\n\n  goToHomePage = () => {\n    this.setState({ countrySelected: false });\n  };\n\n  async componentDidMount() {\n    const url = \"https://api.covid19api.com/summary\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ globalStats: data.Global, countries: data.Countries });\n  }\n\n  render(\n    {},\n    {\n      countrySelected1,\n      countrySelected2,\n      globalStats,\n      selectedCountry1,\n      selectedCountry2,\n      countries,\n    }\n  ) {\n    return (\n      <div className=\"compare-outerContainer\">\n        {/* <AppBar goToHomePage={this.goToHomePage} /> */}\n        <div className=\"compare-resultsContainer\">\n          <div className=\"compare-countrySelector\">\n            <CountryDropDown changeCountry={this.changeCountry1} />\n          </div>\n          {countrySelected1 ? <Chart country={selectedCountry1} /> : null}\n          <div className=\"compare-statisticsContainer\">\n            {countrySelected1 ? (\n              <DisplayStats\n                selectedCountry={selectedCountry1}\n                globalStats={globalStats}\n                countries={countries}\n              />\n            ) : null}\n          </div>\n        </div>\n        <div className=\"compare-resultsContainer\">\n          <div className=\"compare-countrySelector\">\n            <CountryDropDown changeCountry={this.changeCountry2} />\n          </div>\n          {countrySelected2 ? <Chart country={selectedCountry2} /> : null}\n          <div className=\"compare-statisticsContainer\">\n            {countrySelected2 ? (\n              <DisplayStats\n                selectedCountry={selectedCountry2}\n                globalStats={globalStats}\n                countries={countries}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { h, render } from \"preact\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Router } from 'preact-router';\n\nimport Header from './components/Header';\n\nimport Home from '../src/routes/home';\nimport Compare from '../src/routes/compare';\n\nclass App extends React.Component {\n\t/** Gets fired when the route changes.\n\t *\t@param {Object} event\t\t\"change\" event from [preact-router](http://git.io/preact-router)\n\t *\t@param {string} event.url\tThe newly routed URL\n\t */\n\thandleRoute = e => {\n\t\tthis.currentUrl = e.url;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n        <Header />\n\t\t\t\t<Router onChange={this.handleRoute}>\n\t\t\t\t\t<Home path=\"/\" />\n          <Compare path=\"/compare/\" />\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}